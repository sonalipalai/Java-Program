import java.util.*;
class Elementpeak
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter for n:");
		int n=sc.nextInt();
		int arr[]=new int[n];
		System.out.println("Enter elements to the array :");
		for(int i=0; i<n;i++)
		{
			 arr[i]=sc.nextInt();
		}
		System.out.println("Enter element to search :  ");
		int target=sc.nextInt();
		int start= 0;
		int end= n-1;
		int peak= binarysearch(arr,start,end);
		int firsttry=binarysearch1(arr,0,peak,target);
		if(firsttry!= -1)
		{
		 
		 System.out.println("Searhed element stored in   " + firsttry);
		}
		else
		{
		 int secondtry= binarysearch2(arr,peak+1,end,target);
		System.out.println("Searhed element stored in   " + secondtry);
		}
	 }

	  static int binarysearch(int arr[],int start, int end)
	 {
	   	  
		  while(start<=end)
		  {
		    int mid= start+ (end-start)/2;
		     if(start==end)
		    {
			return start;
		    }
		    else if(arr[mid]> arr[mid+1])
		    {
			end=mid-1;
		    }
		    else if(arr[mid]< arr[mid+1])
		    {
		      start= mid+1;
		    }
		    
		  }
		  return start;
	  }
	  static int binarysearch1(int arr[],int start,int end,int target)
	     {
               
	       while(start<=end)
	       {
		  int mid= (end-start)/2 +start;
		  if(arr[mid]==target)
		  {
		  return mid;
		  }
		  if(target < arr[mid])
		  {
		    end= mid-1;
		  }
		  else
		  {
		    start=mid+1;
		  }
	       }
	        return -1;
	    }
	// code for searching 2nd part of the array
	static int binarysearch2(int arr[],int start,int end,int target)
	     {
               
	       while(start<=end)
	       {
		  int mid= (end-start)/2 +start;
		  if(arr[mid]==target)
		  {
		  return mid;
		  }
		  if(target < arr[mid])
		  {
		    end= mid-1;
		  }
		  else
		  {
		    start=mid+1;
		  }
	       }
	        return -1;
	    }
 }
